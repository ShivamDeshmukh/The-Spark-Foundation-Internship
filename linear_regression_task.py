# -*- coding: utf-8 -*-
"""Linear_Regression_task.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11oQ8ulF0y8ztUlV5tmEafyA_IWUB0PY8

# **The Spark Foundation**
# **Task 2 : Linear Regression**
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

"""# Reading Data from URL"""

url = "https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv"
data = pd.read_csv(url)
data.head(10)

"""# Creating a 2-D graph"""

#Plotting the distribution
data.plot(x = "Hours",  y= "Scores", style = 'o')
plt.title("Hours vs Scores")
plt.xlabel("Hours Studied")
plt.ylabel("Scores Received")
plt.show()



"""#Preparing the Data"""

X = data.iloc[:, :-1].values
Y = data.iloc[:, 1].values

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, random_state = 0)

"""# Training the Algorithm"""

from sklearn.linear_model import LinearRegression
regression = LinearRegression()
regression.fit(X_train, Y_train)

#Plotting the regression
line = regression.coef_*X+regression.intercept_

#Plotting for the test data
plt.scatter(X,Y)
plt.plot(X, line)
plt.show()

"""# Making Predictions"""

print("Hours")
print(X_test) # Test data in Hours
Y_pred = regression.predict(X_test) # Predicted scores from test data

#Actual vs Predicted scores
print('Scores')
df= pd.DataFrame({ 'Actual':Y_test ,
               'Predicted':Y_pred})
df

#Testing with our data
hours = 9.25
pred = regression.predict([[hours]])
print("No. of Hours : ",hours)
print("Predicted Score : ",pred[0])

"""# **Model Evaluation**"""

from sklearn import  metrics
print('Mean Absolute Error :',
      metrics.mean_absolute_error(Y_test, Y_pred))

